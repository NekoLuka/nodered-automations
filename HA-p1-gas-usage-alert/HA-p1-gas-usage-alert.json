[
    {
        "id": "9945412a8820b628",
        "type": "tab",
        "label": "Gas check",
        "disabled": false,
        "info": ""
    },
    {
        "id": "42c41db345c3dc12",
        "type": "inject",
        "z": "9945412a8820b628",
        "name": "Check current gas usage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "8e1bfe5f358417fb"
            ]
        ]
    },
    {
        "id": "8e1bfe5f358417fb",
        "type": "http request",
        "z": "9945412a8820b628",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "${HA-HOST}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 280,
        "wires": [
            [
                "e3af50965d47abe0"
            ]
        ]
    },
    {
        "id": "e3af50965d47abe0",
        "type": "function",
        "z": "9945412a8820b628",
        "name": "Parse usage amount",
        "func": "var state = parseFloat(msg.payload.state);\n\nmsg.payload = state;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "a113b22ab4c4054c"
            ]
        ]
    },
    {
        "id": "88aef07860300b60",
        "type": "function",
        "z": "9945412a8820b628",
        "name": "Update alert amount",
        "func": "var state = parseFloat(msg.payload.state);\n\nstate += parseFloat(env.get(\"HA-ALERT-AFTER\"));\n\nglobal.set(\"alert-after\", state);\nmsg.payload = state;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 160,
        "wires": [
            [
                "ad25566b419b171d"
            ]
        ]
    },
    {
        "id": "29e5b1e5ccf99802",
        "type": "switch",
        "z": "9945412a8820b628",
        "name": "Check if to alert",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "alert-after",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "8de93e2852af6541"
            ]
        ]
    },
    {
        "id": "d00b79beea70ad42",
        "type": "http request",
        "z": "9945412a8820b628",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "${HA-HOST}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "88aef07860300b60"
            ]
        ]
    },
    {
        "id": "0e93a62d4ac017e4",
        "type": "debug",
        "z": "9945412a8820b628",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "c600456db4058e36",
        "type": "http request",
        "z": "9945412a8820b628",
        "name": "Send alert",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "${NTFY-URL}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Title",
                "valueType": "other",
                "valueValue": "Gas usage alert"
            },
            {
                "keyType": "other",
                "keyValue": "Priority",
                "valueType": "other",
                "valueValue": "4"
            },
            {
                "keyType": "other",
                "keyValue": "Tags",
                "valueType": "other",
                "valueValue": "warning"
            },
            {
                "keyType": "other",
                "keyValue": "Message",
                "valueType": "msg",
                "valueValue": "payload"
            }
        ],
        "x": 110,
        "y": 400,
        "wires": [
            [
                "215bbac825cba009"
            ]
        ]
    },
    {
        "id": "8de93e2852af6541",
        "type": "function",
        "z": "9945412a8820b628",
        "name": "Create ntfy message string",
        "func": "msg.payload = `Gas usage went above ${global.get('alert-after')}m3.`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 340,
        "wires": [
            [
                "c600456db4058e36"
            ]
        ]
    },
    {
        "id": "2cc80dba341a9966",
        "type": "debug",
        "z": "9945412a8820b628",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 400,
        "wires": []
    },
    {
        "id": "bfcc80cef1ec8fd0",
        "type": "inject",
        "z": "9945412a8820b628",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "60c5c441233d54a2"
            ]
        ]
    },
    {
        "id": "16ec5dec035c1f29",
        "type": "comment",
        "z": "9945412a8820b628",
        "name": "Function to reset the alert amount at midnight",
        "info": "Function to reset the alert amount at midnight",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "d4765c959e75d588",
        "type": "comment",
        "z": "9945412a8820b628",
        "name": "Check the gas usage every minute to check if it is above the set limit",
        "info": "",
        "x": 280,
        "y": 240,
        "wires": []
    },
    {
        "id": "60c5c441233d54a2",
        "type": "cronplus",
        "z": "9945412a8820b628",
        "name": "Time update",
        "outputField": "payload",
        "timeZone": "Europe/Amsterdam",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 1 0 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 270,
        "y": 100,
        "wires": [
            [
                "d00b79beea70ad42"
            ]
        ]
    },
    {
        "id": "ad25566b419b171d",
        "type": "function",
        "z": "9945412a8820b628",
        "name": "Set one-time fire",
        "func": "global.set(\"fired\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "0e93a62d4ac017e4"
            ]
        ]
    },
    {
        "id": "a113b22ab4c4054c",
        "type": "switch",
        "z": "9945412a8820b628",
        "name": "Check if fired",
        "property": "fired",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 110,
        "y": 340,
        "wires": [
            [
                "29e5b1e5ccf99802"
            ]
        ]
    },
    {
        "id": "215bbac825cba009",
        "type": "function",
        "z": "9945412a8820b628",
        "name": "Stop one-time fire",
        "func": "global.set(\"fired\", 1);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 400,
        "wires": [
            [
                "2cc80dba341a9966"
            ]
        ]
    }
]
